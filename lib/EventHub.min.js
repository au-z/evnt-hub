!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("EventHub",[],t):"object"==typeof exports?exports.EventHub=t():e.EventHub=t()}(this,function(){return function(e){function t(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var n={};return t.m=e,t.c=n,t.i=function(e){return e},t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:o})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=2)}([function(e,t,n){"use strict";function o(){function e(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:function(){};u[e]||(u[e]=[]);var n=(++a).toString();return u[e].push({token:n,func:t}),i&&console.log("Subscription to '"+e+"' added. Returning token: "+n+"."),n}function t(e,t){return!!u[e]&&(setTimeout(function(){for(var n=u[e],o=n?n.length:0;o--;)n[o].func(e,t),i&&r.debugFn(e,t);s&&s()},0),!0)}function n(e){for(var t in u)if(u[t])for(var n=0;n<u[t].length;n++)if(u[t][n].token===e)return u[t].splice(n,1),i&&console.log("[EventHub] Unsubscribed token "+e+"."),e;return!1}function o(e){s=e}var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},i=!!r.debugFn,s=void 0,u={},a=-1;return{subscribe:e,publish:t,unsubscribe:n,nextTick:o}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=o,e.exports=t.default},function(e,t){e.exports={name:"evnt-hub",version:"1.4.0",description:"Event subscription library with window.postMessage support.",main:"index.js",scripts:{build:"webpack --env build",dev:"webpack --progress --colors --watch --env dev","dev:demo":'concurrently "npm run dev" "node server.js"',test:"jest","test:watch":"jest --watch",prepublish:'concurrently "webpack --env build" "webpack --env dev" "npm run test"'},repository:{type:"git",url:"git+https://github.com/auzmartist/event-hub.git"},keywords:["events","pub","sub","postMessage"],author:"Austin Martin",license:"ISC",bugs:{url:"https://github.com/auzmartist/event-hub/issues"},homepage:"https://github.com/auzmartist/event-hub#readme",publishConfig:{registry:"https://registry.npmjs.org/"},devDependencies:{babel:"^6.23.0","babel-core":"^6.24.1","babel-eslint":"^7.2.2","babel-loader":"^6.4.1","babel-plugin-add-module-exports":"^0.2.1","babel-preset-es2015":"^6.24.1",chai:"^3.5.0",concurrently:"^3.4.0","cross-env":"^4.0.0",eslint:"^3.19.0","eslint-config-auz":"^1.0.0","eslint-loader":"^1.7.1",express:"^4.15.2",jest:"^22.4.3",jsdom:"^9.12.0","jsdom-global":"^2.1.1",mocha:"^3.2.0",sinon:"^2.1.0",webpack:"^2.4.1",yargs:"^7.1.0"}}},function(e,t,n){"use strict";function o(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=o(r),s=n(1),u=o(s),a=function(e){return e===Object(e)&&"[object Array]"!==Object.prototype.toString.call(e)};t.default=function(e){function t(t){return!e.originRegex||!!e.originRegex.exec(t)}function n(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments[2];g.publish(e,t),o(e,t,n)}function o(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments[2];n=n||d,c&&console.log("Attempting to postMessage "+e+" to targetOrigin "+l+". Payload: ",t),n?(b||console.warn("[EventHub] has no hubId."),a&&(t._hubId=b),l&&n.postMessage({_type:e,payload:t},l)):console.error("[EventHub] cannot postMessage to falsy window.")}function r(e){g.nextTick(e)}e=e||{};var s=e.debugFn,c=!!s,l=e.targetOrigin||null,d=e.targetWindow||null,b=e.hubId||null;!l&&c&&console.warn("[EventHub] Cannot postMessage without a targetOrigin. Please add it to '_init_' event payload."),e.originRegex||console.warn("[EventHub] No originRegex provided. Incoming messages will not be checked.");var g=new i.default({debugFn:s});return g.subscribe("_init_",function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};a(t)?(b=t.hubId.toString(),(l=t.targetOrigin?t.targetOrigin:l)||console.error("[EventHub] No target origin supplied. Cannot postMessage.")):b=t.toString()}),window.addEventListener("message",function(e){var n=e.origin||e.originalEvent.origin;if(!t(n))return void console.warn("[EventHub] message received from unknown origin. Ignoring.");e.data&&e.data._type&&e.data.payload&&(c&&console.log("PostMessage event "+e.data._type+" received from "+n+". Publishing."),g.publish(e.data._type,e.data.payload))}),{about:function(){return{hubId:b,originRegex:e.originRegex,targetOrigin:l,targetWindow:d,debug:c,version:u.default.version}},emit:n,isOriginValid:t,nextTick:r,post:o,publish:g.publish,subscribe:g.subscribe,unsubscribe:g.unsubscribe}},e.exports=t.default}])});