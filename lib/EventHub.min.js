!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define("EventHub",[],n):"object"==typeof exports?exports.EventHub=n():e.EventHub=n()}(this,function(){return function(e){function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}var t={};return n.m=e,n.c=t,n.i=function(e){return e},n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:o})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},n.p="",n(n.s=0)}([function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o=function(e){return e===Object(e)&&"[object Array]"!==Object.prototype.toString.call(e)};n.default=function(e){function n(n){return!e.originRegex||!!e.originRegex.exec(n)}function t(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=arguments[2];g.publish(e,n),r(e,n,t)}function r(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=arguments[2];t=t||a,s&&console.log("Attempting to postMessage "+e+" to targetOrigin "+u+". Payload: ",n),t?(c||console.warn("[EventHub] has no hubId."),o&&(n._hubId=c),u&&t.postMessage({_type:e,payload:n},u)):console.error("[EventHub] cannot postMessage to falsy window.")}function i(e){l=e}e=e||{};var u=e.targetOrigin||null,a=e.targetWindow||null,s=e.verbose||!1,c=e.hubId||null;!u&&s&&console.warn("[EventHub] Cannot postMessage without a targetOrigin. Please add it to '_init_' event payload."),e.originRegex||console.warn("[EventHub] No originRegex provided. Incoming messages will not be checked.");var l=function(){},g=function(e){function n(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:function(){};r[e]||(r[e]=[]);var t=(++i).toString();return r[e].push({token:t,func:n}),s&&console.log("Subscription to '"+e+"' added. Returning token: "+t+"."),t}function t(e,n){return s&&console.log("Event "+e+" published. Payload: ",n),!!r[e]&&(setTimeout(function(){for(var t=r[e],o=t?t.length:0;o--;)t[o].func(e,n);l()},0),!0)}function o(e){for(var n in r)if(r[n])for(var t=0;t<r[n].length;t++)if(r[n][t].token===e)return r[n].splice(t,1),e;return!1}var r={},i=-1;return{subscribe:n,publish:t,unsubscribe:o}}();return g.subscribe("_init_",function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};o(n)?(c=n.hubId.toString(),(u=n.targetOrigin?n.targetOrigin:u)||console.error("[EventHub] No target origin supplied. Cannot postMessage.")):c=n.toString()}),window.addEventListener("message",function(e){var t=e.origin||e.originalEvent.origin;if(!n(t))return void console.warn("[EventHub] message received from unknown origin. Ignoring.");e.data&&e.data._type&&e.data.payload&&(s&&console.log("PostMessage event "+e.data._type+" received from "+t+". Publishing."),g.publish(e.data._type,e.data.payload))}),{about:function(){return{hubId:c,originRegex:e.originRegex,targetOrigin:u,targetWindow:a,verbose:s,version:"1.3.1"}},emit:t,isOriginValid:n,nextTick:i,post:r,publish:g.publish,subscribe:g.subscribe,unsubscribe:g.unsubscribe}},e.exports=n.default}])});